/* jquery.scrolly v1.0.0-dev | (c) n33 | n33.co @n33co | MIT */
(function (e) {
    function u(s, o) {
        var u, a, f;
        if ((u = e(s))[t] == 0) return n;
        a = u[i]()[r];
        switch (o.anchor) {
            case"middle":
                f = a - (e(window).height() - u.outerHeight()) / 2;
                break;
            default:
            case r:
                f = Math.max(a, 0)
        }
        return typeof o[i] == "function" ? f -= o[i]() : f -= o[i], f
    }

    var t = "length", n = null, r = "top", i = "offset", s = "click.scrolly", o = e(window);
    e.fn.scrolly = function (i) {
        var o, a, f, l, c = e(this);
        if (this[t] == 0) return c;
        if (this[t] > 1) {
            for (o = 0; o < this[t]; o++) e(this[o]).scrolly(i);
            return c
        }
        l = n, f = c.attr("href");
        if (f.charAt(0) != "#" || f[t] < 2) return c;
        a = jQuery.extend({anchor: r, easing: "swing", offset: 0, parent: e("body,html"), pollOnce: !1, speed: 1e3}, i), a.pollOnce && (l = u(f, a)), c.off(s).on(s, function (e) {
            var t = l !== n ? l : u(f, a);
            t !== n && (e.preventDefault(), a.parent.stop().animate({scrollTop: t}, a.speed, a.easing))
        })
    }
})(jQuery);

/* jquery.scrollzer v0.2 | (c) n33 | n33.co @n33co | MIT + GPLv2 */
jQuery.scrollzer = function (e, t) {
    var n = !1, r = "object", i = "clearTimeout", s = "setTimeout", o = "removeClass", u = "scrollzer-locked", a = "activeClassName", f = jQuery(window), l = jQuery(document);
    f.load(function () {
        var c, h, p, d, v, m, g, y, b, w, E = jQuery.extend({activeClassName: "active", suffix: "-link", pad: 50, firstHack: n, lastHack: n}, t), S = [], x = jQuery();
        for (c in e) {
            p = jQuery("#" + e[c]), d = jQuery("#" + e[c] + E.suffix);
            if (p.length < 1 || d.length < 1) continue;
            h = {}, h.link = d, h[r] = p, S[e[c]] = h, x = x.add(d)
        }
        y = function () {
            var e;
            for (c in S) e = S[c], e.start = Math.ceil(e[r].offset().top) - E.pad, e.end = e.start + Math.ceil(e[r].innerHeight());
            f.trigger("scroll")
        }, f.resize(function () {
            window[i](g), g = window[s](y, 250)
        }), w = function () {
            x[o](u)
        }, f.scroll(function () {
            var e = 0, t = n;
            v = f.scrollTop(), window[i](b), b = window[s](w, 250);
            for (c in S) c != m && v >= S[c].start && v <= S[c].end && (m = c, t = !0), e++;
            E.lastHack && v + f.height() >= l.height() && (m = c, t = !0), t && !x.hasClass(u) && (x[o](E[a]), S[m].link.addClass(E[a]))
        }), f.trigger("resize")
    })
};