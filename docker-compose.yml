version: '2.1'

services:
# working ssl implementation. Uncomment for deployment

# nginx-proxy:
#  restart: always
#  image: jwilder/nginx-proxy
#  ports:
#   - "80:80"
#   - "443:443"
#  volumes:
#   - "nginx-vhost:/etc/nginx/vhost.d"
#   - "nginx-html:/usr/share/nginx/html"
#   - "nginx-certs:/etc/nginx/certs"
#   - "/var/run/docker.sock:/tmp/docker.sock:ro"
#  extends:
#   file: settings.yml
#   service: base
#
# letsencrypt-nginx-proxy-companion:
#   image: jrcs/letsencrypt-nginx-proxy-companion
#   restart: always
#   volumes:
#     - "/var/run/docker.sock:/var/run/docker.sock:ro"
#   volumes_from:
#     - "nginx-proxy"
#   extends:
#    file: settings.yml
#    service: base

 application-server:
  build: ./application-server
  restart: always
  extends:
   file: settings.yml
   service: hostname
  # delete ports for deployment
  ports:
   - 80:80
  volumes:
   # simplify development by allowing instantaneous code changes. Unsafe. Remove for deployment
   - ./application-server/src:/var/www
  depends_on:
   - database-server

 database-server:
  # delete ports for deployment
  ports:
   - "3306:3306"
  restart: always
  build: ./database-server
  volumes: 
   - packapps-db:/var/lib/mysql

 # phpmyadmin for database visualization. comment out for deployment
 phpmyadmin:
  image: phpmyadmin/phpmyadmin
  container_name: phpmyadmin
  environment:
   - PMA_HOST=database-server
  restart: always
  ports:
   - 8080:80
  volumes:
   - /sessions

volumes:
 packapps-db:
 nginx-certs:
 nginx-vhost:
 nginx-html:
